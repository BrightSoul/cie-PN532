<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcie__PN532" kind="class" language="C++" prot="public">
    <compoundname>cie_PN532</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcie__PN532_1a47be5283778f4bbeb4e5342ed76e6e10" prot="private" static="no" mutable="no">
        <type>Adafruit_PN532 *</type>
        <definition>Adafruit_PN532* cie_PN532::_nfc</definition>
        <argsstring></argsstring>
        <name>_nfc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="109" column="1" bodyfile="cie_PN532.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcie__PN532_1a109f542373adbb5b68ed1e1366f85b48" prot="private" static="no" mutable="no">
        <type><ref refid="classcie__BerReader" kindref="compound">cie_BerReader</ref> *</type>
        <definition>cie_BerReader* cie_PN532::_berReader</definition>
        <argsstring></argsstring>
        <name>_berReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="110" column="1" bodyfile="cie_PN532.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcie__PN532_1af1581e7816ff99ca7ce81d3c35d9da9e" prot="private" static="no" mutable="no">
        <type><ref refid="classcie__AtrReader" kindref="compound">cie_AtrReader</ref> *</type>
        <definition>cie_AtrReader* cie_PN532::_atrReader</definition>
        <argsstring></argsstring>
        <name>_atrReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="111" column="1" bodyfile="cie_PN532.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcie__PN532_1a70b32fda210256bbfc76afc677cab7a8" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte cie_PN532::_currentDedicatedFile</definition>
        <argsstring></argsstring>
        <name>_currentDedicatedFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="112" column="1" bodyfile="cie_PN532.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcie__PN532_1abf1f7b8f699509bd0d0ca484ae30697c" prot="private" static="no" mutable="no">
        <type>word</type>
        <definition>word cie_PN532::_currentElementaryFile</definition>
        <argsstring></argsstring>
        <name>_currentElementaryFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="113" column="1" bodyfile="cie_PN532.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcie__PN532_1a598bf209af815df4546e340844a3c659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cie_PN532::cie_PN532</definition>
        <argsstring>()</argsstring>
        <name>cie_PN532</name>
        <briefdescription>
<para>Create with the typical breakout wiring, as described by Adafruit: <ulink url="https://learn.adafruit.com/adafruit-pn532-rfid-nfc/breakout-wiring">https://learn.adafruit.com/adafruit-pn532-rfid-nfc/breakout-wiring</ulink>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="83" column="1" bodyfile="cie_PN532.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a2b0f7beddebdbebd17d8d0bb39dd8f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cie_PN532::cie_PN532</definition>
        <argsstring>(byte clk, byte miso, byte mosi, byte ss)</argsstring>
        <name>cie_PN532</name>
        <param>
          <type>byte</type>
          <declname>clk</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>miso</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>mosi</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>ss</declname>
        </param>
        <briefdescription>
<para>Create with a customized wiring. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="84" column="1" bodyfile="cie_PN532.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1ac4533e38683f295bdafdfa89f9bb666b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cie_PN532::cie_PN532</definition>
        <argsstring>(Adafruit_PN532 *nfc)</argsstring>
        <name>cie_PN532</name>
        <param>
          <type>Adafruit_PN532 *</type>
          <declname>nfc</declname>
        </param>
        <briefdescription>
<para>Create with a custom instance of the Adafruit_PN532 class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="85" column="1" bodyfile="cie_PN532.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a77e9f1e799b717ca7cf9ae92dd908da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cie_PN532::~cie_PN532</definition>
        <argsstring>()</argsstring>
        <name>~cie_PN532</name>
        <briefdescription>
<para>Frees resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="86" column="1" bodyfile="cie_PN532.cpp" bodystart="636" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a62bdc53c85283fcc50db2b63971731d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cie_PN532::begin</definition>
        <argsstring>(void)</argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the PN532 board. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="87" column="1" bodyfile="cie_PN532.cpp" bodystart="73" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1acfbecd5760d2c9d44f7fed6887c23ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::detectCard</definition>
        <argsstring>()</argsstring>
        <name>detectCard</name>
        <briefdescription>
<para>Dumps all values present in the CIE. Call this in your loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="88" column="1" bodyfile="cie_PN532.cpp" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a6d85fee99b47537e424bc3326bfa879f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::read_EF_DH</definition>
        <argsstring>(byte *contentBuffer, word *contentLength)</argsstring>
        <name>read_EF_DH</name>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content the EF_DH elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="91" column="1" bodyfile="cie_PN532.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a8985cb0fb809be1cce9cf8fcfad09bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::read_EF_ATR</definition>
        <argsstring>(byte *contentBuffer, word *contentLength)</argsstring>
        <name>read_EF_ATR</name>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of the EF_ATR elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="92" column="1" bodyfile="cie_PN532.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1ad4398cf9f09198ad20a734b405f35fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::read_EF_SN_ICC</definition>
        <argsstring>(byte *contentBuffer, word *contentLength)</argsstring>
        <name>read_EF_SN_ICC</name>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of the SN_ICC elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="93" column="1" bodyfile="cie_PN532.cpp" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1ab8aedeffa797c1b164299c3dd19056d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::read_EF_ID_Servizi</definition>
        <argsstring>(byte *contentBuffer, word *contentLength)</argsstring>
        <name>read_EF_ID_Servizi</name>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of the EF_ID_Servizi elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="94" column="1" bodyfile="cie_PN532.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a8c60845484ddc5b9767762ab10187e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::read_EF_Int_Kpub</definition>
        <argsstring>(byte *contentBuffer, word *contentLength)</argsstring>
        <name>read_EF_Int_Kpub</name>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of the EF_Int_Kpub elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="95" column="1" bodyfile="cie_PN532.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a364df50e3080017493eb2d0c3084068d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::read_EF_Servizi_Int_Kpub</definition>
        <argsstring>(byte *contentBuffer, word *contentLength)</argsstring>
        <name>read_EF_Servizi_Int_Kpub</name>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of the EF_Servizi_Int_Kpub elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="96" column="1" bodyfile="cie_PN532.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a72bb7d350ca91c2db370d6385a7258ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::readElementaryFile</definition>
        <argsstring>(const cie_EFPath filePath, byte *contentBuffer, word *contentLength, const byte lengthStrategy)</argsstring>
        <name>readElementaryFile</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>lengthStrategy</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of an Elementary File given its Dedicated File and EFID or SFI identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>The containing Dedicated File (either ROOT_MF or CIE_DF) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the response data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum desired length of the response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lengthStrategy</parametername>
</parameternamelist>
<parameterdescription>
<para>How to determine the length of the file (either FIXED_LENGTH or AUTODETECT_BER_LENGTH or AUTODETECT_ATR_LENGTH)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="99" column="1" bodyfile="cie_PN532.cpp" bodystart="277" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1ae5bf51526446549cbc4df8e64e9dbbe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::readBinaryContent</definition>
        <argsstring>(const cie_EFPath filePath, byte *contentBuffer, word offset, const word contentLength)</argsstring>
        <name>readBinaryContent</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>contentBuffer</declname>
        </param>
        <param>
          <type>word</type>
          <declname>offset</declname>
          <defname>startingOffset</defname>
        </param>
        <param>
          <type>const word</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of the currently selected Elementary File. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="100" column="1" bodyfile="cie_PN532.cpp" bodystart="430" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a991c44c5f24dc9bf9c9a195010418f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cie_PN532::printHex</definition>
        <argsstring>(byte *buffer, word length)</argsstring>
        <name>printHex</name>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>word</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Dumps all values present in the CIE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="103" column="1" bodyfile="cie_PN532.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1aebce9ebab902380347663ad720e6be9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::print_EF_SOD</definition>
        <argsstring>(word *contentLength)</argsstring>
        <name>print_EF_SOD</name>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
<para>Print the binary content of the EF_SOD elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contentBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to data containing the contents of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The lenght of the file</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="104" column="1" bodyfile="cie_PN532.cpp" bodystart="223" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a7b3645222645c67b2af061e0a5e9b13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::parse_EF_SOD</definition>
        <argsstring>(cieBerTripleCallbackFunc callback)</argsstring>
        <name>parse_EF_SOD</name>
        <param>
          <type>cieBerTripleCallbackFunc</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Parses the BER content of the EF_SOD file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A function which will be invoked when a new triple has been read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="105" column="1" bodyfile="cie_PN532.cpp" bodystart="257" bodyend="261"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcie__PN532_1a4721194e7e3515e145263fa0418e1c9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cie_PN532::initFields</definition>
        <argsstring>()</argsstring>
        <name>initFields</name>
        <briefdescription>
<para>Set default values to some private fields. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="116" column="1" bodyfile="cie_PN532.cpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a06d8fd1bc0a74dbeb25ad4f7cd082802" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::ensureSelected</definition>
        <argsstring>(const cie_EFPath filePath)</argsstring>
        <name>ensureSelected</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1af83b755dcb61b0f4e9e3f76a9120bfee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::ensureDedicatedFileIsSelected</definition>
        <argsstring>(const byte df)</argsstring>
        <name>ensureDedicatedFileIsSelected</name>
        <param>
          <type>const byte</type>
          <declname>df</declname>
        </param>
        <briefdescription>
<para>Selects a dedicated file in the IAS application. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>The Dedicated File (either ROOT_MF or CIE_DF)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="118" column="1" bodyfile="cie_PN532.cpp" bodystart="346" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a4563d228fddd9008e8c01119185cc7b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::ensureElementaryFileIsSelected</definition>
        <argsstring>(const cie_EFPath filePath)</argsstring>
        <name>ensureElementaryFileIsSelected</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Selects an Elementary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>The containing Dedicated File (either ROOT_MF or CIE_DF) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>efid</parametername>
</parameternamelist>
<parameterdescription>
<para>The efid of the Elementary File (must be two bytes)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="119" column="1" bodyfile="cie_PN532.cpp" bodystart="297" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1a53776c86a3631ed8dba712c75bfbdfc5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::selectIasApplication</definition>
        <argsstring>(void)</argsstring>
        <name>selectIasApplication</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Selects the IAS Application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="120" column="1" bodyfile="cie_PN532.cpp" bodystart="523" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1afbf9c47150436402abe6cfd13dc0077e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::selectRootMasterFile</definition>
        <argsstring>(void)</argsstring>
        <name>selectRootMasterFile</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Selects the ROOT Master File. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="121" column="1" bodyfile="cie_PN532.cpp" bodystart="495" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1af88260ac00f97a50224173a4adcdde93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::selectCieDedicatedFile</definition>
        <argsstring>(void)</argsstring>
        <name>selectCieDedicatedFile</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Selects the CIE DF. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="122" column="1" bodyfile="cie_PN532.cpp" bodystart="551" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1af3cf37c5153ad1ffcc1a53d5c5d76aad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::determineLength</definition>
        <argsstring>(const cie_EFPath filePath, word *contentLength, const byte lengthStrategy)</argsstring>
        <name>determineLength</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>lengthStrategy</declname>
        </param>
        <briefdescription>
<para>Sets the length value of a currently selected Elementary File. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the length value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lengthStrategy</parametername>
</parameternamelist>
<parameterdescription>
<para>The chosen strategy by user (either AUTODETECT_BER_LENGTH or FIXED_LENGTH)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value indicating whether the operation suceeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="123" column="1" bodyfile="cie_PN532.cpp" bodystart="392" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1ac9d1a4ab48d9135deacd3308cd0806ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_PN532::hasSuccessStatusWord</definition>
        <argsstring>(byte *response, const word responseLength)</argsstring>
        <name>hasSuccessStatusWord</name>
        <param>
          <type>byte *</type>
          <declname>response</declname>
        </param>
        <param>
          <type>const word</type>
          <declname>responseLength</declname>
        </param>
        <briefdescription>
<para>Reads the EF contents by its SFI under the current DF. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the response data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="124" column="1" bodyfile="cie_PN532.cpp" bodystart="581" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classcie__PN532_1ad60433f52fecaab60f09122b24c84c7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>word</type>
        <definition>word cie_PN532::clamp</definition>
        <argsstring>(const word value, const byte maxValue)</argsstring>
        <name>clamp</name>
        <param>
          <type>const word</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>maxValue</declname>
        </param>
        <briefdescription>
<para>Ensures a value is less or equal than a max value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that should be checked </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The clamped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_PN532.h" line="125" column="1" bodyfile="cie_PN532.cpp" bodystart="623" bodyend="629"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="cie_PN532.h" line="81" column="1" bodyfile="cie_PN532.h" bodystart="80" bodyend="126"/>
    <listofallmembers>
      <member refid="classcie__PN532_1af1581e7816ff99ca7ce81d3c35d9da9e" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>_atrReader</name></member>
      <member refid="classcie__PN532_1a109f542373adbb5b68ed1e1366f85b48" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>_berReader</name></member>
      <member refid="classcie__PN532_1a70b32fda210256bbfc76afc677cab7a8" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>_currentDedicatedFile</name></member>
      <member refid="classcie__PN532_1abf1f7b8f699509bd0d0ca484ae30697c" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>_currentElementaryFile</name></member>
      <member refid="classcie__PN532_1a47be5283778f4bbeb4e5342ed76e6e10" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>_nfc</name></member>
      <member refid="classcie__PN532_1a62bdc53c85283fcc50db2b63971731d9" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>begin</name></member>
      <member refid="classcie__PN532_1a598bf209af815df4546e340844a3c659" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>cie_PN532</name></member>
      <member refid="classcie__PN532_1a2b0f7beddebdbebd17d8d0bb39dd8f30" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>cie_PN532</name></member>
      <member refid="classcie__PN532_1ac4533e38683f295bdafdfa89f9bb666b" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>cie_PN532</name></member>
      <member refid="classcie__PN532_1ad60433f52fecaab60f09122b24c84c7f" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>clamp</name></member>
      <member refid="classcie__PN532_1acfbecd5760d2c9d44f7fed6887c23ca5" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>detectCard</name></member>
      <member refid="classcie__PN532_1af3cf37c5153ad1ffcc1a53d5c5d76aad" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>determineLength</name></member>
      <member refid="classcie__PN532_1af83b755dcb61b0f4e9e3f76a9120bfee" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>ensureDedicatedFileIsSelected</name></member>
      <member refid="classcie__PN532_1a4563d228fddd9008e8c01119185cc7b7" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>ensureElementaryFileIsSelected</name></member>
      <member refid="classcie__PN532_1a06d8fd1bc0a74dbeb25ad4f7cd082802" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>ensureSelected</name></member>
      <member refid="classcie__PN532_1ac9d1a4ab48d9135deacd3308cd0806ef" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>hasSuccessStatusWord</name></member>
      <member refid="classcie__PN532_1a4721194e7e3515e145263fa0418e1c9d" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>initFields</name></member>
      <member refid="classcie__PN532_1a7b3645222645c67b2af061e0a5e9b13a" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>parse_EF_SOD</name></member>
      <member refid="classcie__PN532_1aebce9ebab902380347663ad720e6be9e" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>print_EF_SOD</name></member>
      <member refid="classcie__PN532_1a991c44c5f24dc9bf9c9a195010418f0d" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>printHex</name></member>
      <member refid="classcie__PN532_1a8985cb0fb809be1cce9cf8fcfad09bb4" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>read_EF_ATR</name></member>
      <member refid="classcie__PN532_1a6d85fee99b47537e424bc3326bfa879f" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>read_EF_DH</name></member>
      <member refid="classcie__PN532_1ab8aedeffa797c1b164299c3dd19056d1" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>read_EF_ID_Servizi</name></member>
      <member refid="classcie__PN532_1a8c60845484ddc5b9767762ab10187e9e" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>read_EF_Int_Kpub</name></member>
      <member refid="classcie__PN532_1a364df50e3080017493eb2d0c3084068d" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>read_EF_Servizi_Int_Kpub</name></member>
      <member refid="classcie__PN532_1ad4398cf9f09198ad20a734b405f35fb6" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>read_EF_SN_ICC</name></member>
      <member refid="classcie__PN532_1ae5bf51526446549cbc4df8e64e9dbbe5" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>readBinaryContent</name></member>
      <member refid="classcie__PN532_1a72bb7d350ca91c2db370d6385a7258ff" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>readElementaryFile</name></member>
      <member refid="classcie__PN532_1af88260ac00f97a50224173a4adcdde93" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>selectCieDedicatedFile</name></member>
      <member refid="classcie__PN532_1a53776c86a3631ed8dba712c75bfbdfc5" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>selectIasApplication</name></member>
      <member refid="classcie__PN532_1afbf9c47150436402abe6cfd13dc0077e" prot="private" virt="non-virtual"><scope>cie_PN532</scope><name>selectRootMasterFile</name></member>
      <member refid="classcie__PN532_1a77e9f1e799b717ca7cf9ae92dd908da5" prot="public" virt="non-virtual"><scope>cie_PN532</scope><name>~cie_PN532</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
