<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcie__BerReader" kind="class" language="C++" prot="public">
    <compoundname>cie_BerReader</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcie__BerReader_1a5cb7ad06eaf1f636077c9c0f40668f37" prot="private" static="no" mutable="no">
        <type><ref refid="classcie__PN532" kindref="compound">cie_PN532</ref> *</type>
        <definition>cie_PN532* cie_BerReader::_cie</definition>
        <argsstring></argsstring>
        <name>_cie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="39" column="1" bodyfile="cie_BerReader.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcie__BerReader_1aae93c20bb32d081fd2de06ac8cb68c6a" prot="private" static="no" mutable="no">
        <type>word</type>
        <definition>word cie_BerReader::_currentOffset</definition>
        <argsstring></argsstring>
        <name>_currentOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="40" column="1" bodyfile="cie_BerReader.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcie__BerReader_1a40bf0e1fbe98ade2e6aa90e8ebac44ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cie_BerReader::cie_BerReader</definition>
        <argsstring>(cie_PN532 *cie)</argsstring>
        <name>cie_BerReader</name>
        <param>
          <type><ref refid="classcie__PN532" kindref="compound">cie_PN532</ref> *</type>
          <declname>cie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="35" column="1" bodyfile="cie_BerReader.cpp" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a3c8abcfbee8fe9e5f51615102b2ebd1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::readTriples</definition>
        <argsstring>(const cie_EFPath filePath, cieBerTripleCallbackFunc callback, word *length, const byte maxDepth)</argsstring>
        <name>readTriples</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>cieBerTripleCallbackFunc</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>maxDepth</declname>
        </param>
        <briefdescription>
<para>Reads the triples hierarchy in the BER encoded file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rootTriple</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the root triple which will contain all of the others as its children </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the outer length (tag octets + length octets + content length) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDepth</parametername>
</parameternamelist>
<parameterdescription>
<para>How deep down in the hierarchy we should look for triples</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="36" column="1" bodyfile="cie_BerReader.cpp" bodystart="39" bodyend="158"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcie__BerReader_1ad1ff54c9967b46538d8c784dfc45e0f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cie_BerReader::resetCursor</definition>
        <argsstring>()</argsstring>
        <name>resetCursor</name>
        <briefdescription>
<para>Resets the cursor to the binary content. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="41" column="1" bodyfile="cie_BerReader.cpp" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a5bce3e2fed4d98ad4ebb52cb84eabb06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::areEqual</definition>
        <argsstring>(byte *buffer1, byte length1, byte *buffer2, byte length2)</argsstring>
        <name>areEqual</name>
        <param>
          <type>byte *</type>
          <declname>buffer1</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>length1</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>buffer2</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>length2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="42" column="1" bodyfile="cie_BerReader.cpp" bodystart="364" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a5e82c788072506822114033c63219ddd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cie_BerReader::readBinaryContent</definition>
        <argsstring>(const cie_EFPath filePath, const word offset, const word length)</argsstring>
        <name>readBinaryContent</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>const word</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const word</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a195d876c24c8b2e64adbd13c81a62da5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::readTriple</definition>
        <argsstring>(const cie_EFPath filePath, cie_BerTriple *&amp;triple, word *length)</argsstring>
        <name>readTriple</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classcie__BerTriple" kindref="compound">cie_BerTriple</ref> *&amp;</type>
          <declname>triple</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Extracts informations from a single triple. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>triple</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the triple object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the outer length (tag octets + length octets + content length)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="45" column="1" bodyfile="cie_BerReader.cpp" bodystart="172" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1ade75cc58849733066c1a36e6d7a2a055" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::readTripleValue</definition>
        <argsstring>(const cie_BerTriple triple, byte *buffer)</argsstring>
        <name>readTripleValue</name>
        <param>
          <type>const <ref refid="classcie__BerTriple" kindref="compound">cie_BerTriple</ref></type>
          <declname>triple</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Reads the binary content of a triple into the buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>triple</parametername>
</parameternamelist>
<parameterdescription>
<para>The triple to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the buffer where the binary content will be written to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="46" column="1" bodyfile="cie_BerReader.cpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a2182a0f026274463c342b7a84809dd8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::detectLength</definition>
        <argsstring>(const cie_EFPath filePath, word *contentOffset, word *contentLength, byte *lengthOctets)</argsstring>
        <name>detectLength</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentOffset</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>contentLength</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>lengthOctets</declname>
        </param>
        <briefdescription>
<para>Detects the content length in a triple. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to binary content length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lengthOctets</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the number of length octets found in this triple)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="47" column="1" bodyfile="cie_BerReader.cpp" bodystart="214" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a80de39ab5da1cdeab2c7494cd0bcabe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::detectTag</definition>
        <argsstring>(const cie_EFPath filePath, byte *classification, byte *encoding, word *type, byte *tagOctets)</argsstring>
        <name>detectTag</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>classification</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>word *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>tagOctets</declname>
        </param>
        <briefdescription>
<para>Detects the tag type, class and content encoding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>classification</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the detected class value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoding</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the detected binary content encoding (either primitive or constructed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the detected type value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagOctets</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the number of tag octets found in this triple </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="48" column="1" bodyfile="cie_BerReader.cpp" bodystart="268" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a9cef2230ba5535b68a3bff5706f52386" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::readOctets</definition>
        <argsstring>(const cie_EFPath filePath, byte *buffer, const word offset, const word length)</argsstring>
        <name>readOctets</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const word</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const word</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Reads bytes from the file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the buffer which will contain the octets </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset from which we should read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="49" column="1" bodyfile="cie_BerReader.cpp" bodystart="325" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1a6a7eb85d1bf274750fd6264231ab83f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::readOctets</definition>
        <argsstring>(const cie_EFPath filePath, byte *buffer, const word length)</argsstring>
        <name>readOctets</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const word</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Reads bytes from the file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the buffer which will contain the octets </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="50" column="1" bodyfile="cie_BerReader.cpp" bodystart="345" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classcie__BerReader_1afd894d4fd246e1b2352afbbc49e5dc2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cie_BerReader::readOctet</definition>
        <argsstring>(const cie_EFPath filePath, byte *octet)</argsstring>
        <name>readOctet</name>
        <param>
          <type>const <ref refid="structcie__EFPath" kindref="compound">cie_EFPath</ref></type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>octet</declname>
        </param>
        <briefdescription>
<para>Reads bytes from the file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>a structure indicating the parent Dedicated File (either ROOT_MF or CIE_DF), the selection mode (either SELECT_BY_EFID or SELECT_BY_SFI) and the file identifier (either a sfi or an efid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>octet</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the byte read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating whether the operation succeeded or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cie_BerReader.h" line="51" column="1" bodyfile="cie_BerReader.cpp" bodystart="359" bodyend="361"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="cie_BerReader.h" line="33" column="1" bodyfile="cie_BerReader.h" bodystart="32" bodyend="53"/>
    <listofallmembers>
      <member refid="classcie__BerReader_1a5cb7ad06eaf1f636077c9c0f40668f37" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>_cie</name></member>
      <member refid="classcie__BerReader_1aae93c20bb32d081fd2de06ac8cb68c6a" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>_currentOffset</name></member>
      <member refid="classcie__BerReader_1a5bce3e2fed4d98ad4ebb52cb84eabb06" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>areEqual</name></member>
      <member refid="classcie__BerReader_1a40bf0e1fbe98ade2e6aa90e8ebac44ff" prot="public" virt="non-virtual"><scope>cie_BerReader</scope><name>cie_BerReader</name></member>
      <member refid="classcie__BerReader_1a2182a0f026274463c342b7a84809dd8c" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>detectLength</name></member>
      <member refid="classcie__BerReader_1a80de39ab5da1cdeab2c7494cd0bcabe5" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>detectTag</name></member>
      <member refid="classcie__BerReader_1a5e82c788072506822114033c63219ddd" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>readBinaryContent</name></member>
      <member refid="classcie__BerReader_1afd894d4fd246e1b2352afbbc49e5dc2f" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>readOctet</name></member>
      <member refid="classcie__BerReader_1a9cef2230ba5535b68a3bff5706f52386" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>readOctets</name></member>
      <member refid="classcie__BerReader_1a6a7eb85d1bf274750fd6264231ab83f9" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>readOctets</name></member>
      <member refid="classcie__BerReader_1a195d876c24c8b2e64adbd13c81a62da5" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>readTriple</name></member>
      <member refid="classcie__BerReader_1a3c8abcfbee8fe9e5f51615102b2ebd1d" prot="public" virt="non-virtual"><scope>cie_BerReader</scope><name>readTriples</name></member>
      <member refid="classcie__BerReader_1ade75cc58849733066c1a36e6d7a2a055" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>readTripleValue</name></member>
      <member refid="classcie__BerReader_1ad1ff54c9967b46538d8c784dfc45e0f0" prot="private" virt="non-virtual"><scope>cie_BerReader</scope><name>resetCursor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
